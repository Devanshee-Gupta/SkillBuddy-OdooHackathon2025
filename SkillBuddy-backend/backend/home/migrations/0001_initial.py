# Generated by Django 4.2.23 on 2025-07-12 07:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('AdminId', models.AutoField(primary_key=True, serialize=False)),
                ('FirstName', models.CharField(max_length=32)),
                ('LastName', models.CharField(max_length=32)),
                ('Email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Enter a valid email address.')])),
            ],
            options={
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('SkillId', models.AutoField(primary_key=True, serialize=False)),
                ('SkillName', models.CharField(max_length=40)),
                ('Desc', models.TextField(max_length=1200)),
                ('isApproved', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'skill',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('UserId', models.AutoField(primary_key=True, serialize=False)),
                ('FirstName', models.CharField(max_length=32)),
                ('LastName', models.CharField(max_length=32)),
                ('Email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Enter a valid email address.')])),
                ('Password', models.CharField(max_length=4096, validators=[django.core.validators.RegexValidator(code='invalid_password_format', message='Password must contain atleast 1 uppercase letter, 1 special character, and 1 number and be atleast 5 characters long.', regex='^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9]).{5,}$')])),
                ('ProfileType', models.CharField(choices=[('public', 'public'), ('private', 'private')], default='public', max_length=7)),
                ('AvailStart', models.DateTimeField()),
                ('AvailDeadline', models.DateTimeField()),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='SwapRequest',
            fields=[
                ('SwapId', models.AutoField(primary_key=True, serialize=False)),
                ('Status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=8)),
                ('ReceiverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swap_requests_received', to='home.user')),
                ('RequesterId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swap_requests_sent', to='home.user')),
                ('SkillOfferedId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swap_requests_offeredskills', to='home.skill')),
                ('SkillWantedId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swap_requests_wantedskills', to='home.skill')),
            ],
            options={
                'db_table': 'swaprequest',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('FeedbackId', models.AutoField(primary_key=True, serialize=False)),
                ('Rating', models.IntegerField()),
                ('ReviewComment', models.TextField(max_length=1200)),
                ('CreatedAt', models.DateTimeField(auto_now_add=True)),
                ('GiverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks_given', to='home.user')),
                ('ReceiverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks_received', to='home.user')),
                ('SwapId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='home.swaprequest')),
            ],
            options={
                'db_table': 'feedback',
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('UserSkillId', models.AutoField(primary_key=True, serialize=False)),
                ('SkillType', models.CharField(choices=[('offered', 'offered'), ('wanted', 'wanted')], max_length=7)),
                ('SkillId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_skills', to='home.skill')),
                ('UserId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_skills', to='home.user')),
            ],
            options={
                'db_table': 'userskill',
                'unique_together': {('UserId', 'SkillId')},
            },
        ),
    ]
